package adminEventos;
//
//  Generated by StarUML(tm) Java Add-In

import DTOS.evento.EventoConsultableDTO;
import excepciones.NegocioException;
import java.util.Calendar;
import java.util.List;

//
//  @ Project : Aulas
//  @ File Name : FachadaAdminEventos.java
//  @ Date : 05/05/2024
//  @ Author : Luisa
//
//




public class FachadaAdminEventos implements IAdminEventos {
    private ControlAdminEventos control;

    public FachadaAdminEventos() {
        this.control=new ControlAdminEventos();
    }

    @Override
    public EventoConsultableDTO agregarEvento(EventoConsultableDTO evento) throws NegocioException {
        try {
            return this.control.agregarEvento(evento);
        } catch (NegocioException e) {
            throw e;
        }
    }

    @Override
    public EventoConsultableDTO editarEvento(EventoConsultableDTO evento, List<String> camposModificados) throws NegocioException {
        try {
            return this.control.editarEvento(evento,camposModificados);
        } catch (NegocioException e) {
            throw e;
        }
    }

    @Override
    public boolean eliminarEvento(EventoConsultableDTO evento) throws NegocioException {
        try {
            return this.control.eliminarEvento(evento);
        } catch (NegocioException e) {
            throw e;
        }
    }

    @Override
    public List<EventoConsultableDTO> obtenerEventos() throws NegocioException {
        try {
            return this.control.obtenerEventos();
        } catch (NegocioException e) {
            throw e;
        }
    }

    @Override
    public List<EventoConsultableDTO> obtenerEventos(String tipoEvento) throws NegocioException {
        try {
            return this.control.obtenerEventos(tipoEvento);
        } catch (NegocioException e) {
            throw e;
        }
    }

    @Override
    public List<EventoConsultableDTO> obtenerEventos(Calendar fechaFiltro) throws NegocioException {
        try {
            return this.control.obtenerEventos(fechaFiltro);
        } catch (NegocioException e) {
            throw e;
        }
    }
    
    @Override
    public List<EventoConsultableDTO> obtenerEventos(String tipoEvento, Calendar fechaFiltro) throws NegocioException {
        try {
            return this.control.obtenerEventos(tipoEvento, fechaFiltro);
        } catch (NegocioException e) {
            throw e;
        }
    }

    @Override
    public EventoConsultableDTO obtenerEvento(EventoConsultableDTO evento) throws NegocioException {
        try {
            return this.control.obtenerEvento(evento);
        } catch (NegocioException e) {
            throw e;
        }
    }
}
